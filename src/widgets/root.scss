:root
{--themeBase: #fff;--normalBgColor: #fff;--menuItemHoverColor: #efefef;--menuTextColor: #393f4c;--useInfoTextColor: #000;--checkBoxBg: #f4f4f4;--checkBoxCheckBg: #ccc;--checkGreen: #04ec1f;--abacusBlue: #0078ff;--mestBlue: #5577ba;--dividerColor: #d7e0e0;--shortCutColor: #888f8e;--subMenuBorderColor: #ccc;--themeHighlightColor: rgba(218, 38, 255, 0.26);--themeHighlightComplement: #f1f1f1;--workSpaceBgColor: #f1f1f1;--inputBg: rgba(255, 255, 255, 0.45);--inputFg: #000;--subMenuShadowColor: rgba(0, 0, 0, .2);--dialogFootColor: #fcfcfc;--tabHoverColor: #23ff8c;--tileTagColor: #0095ff;--tintColor: rgba(255, 255, 255, 0.67);--disabledBg: #eee !important;--disabledFg: #d4d4d4 !important;--disabledBorderColor: #e2e3e4 !important;--disabledTextShadow: 1px 1px 0 #fff;--formLabelColor: #9ba4af;--formLabelColor2: #9ba4af;--halfTint: rgba(255, 255, 255, .5);--halfTint2: rgba(255, 255, 255, .7);--tableBgColor: #fff;--rowDividerColor: var(--dividerColor);--rowHighLightColor: var(--themeHighlightColor);--thBgColor: #fff;--thTextColor: #000;--theadBorderBtm: 1px solid var(--dividerColor);--dialogDivider: #ccc;--dialogBorder: #e6e6e6;--msgBoxInputBg: #f5f5f5;--treeListBg: #f4f4f4}

:root
{--normalBgColor: #fff;--menuItemHoverColor: #efefef;--menuTextColor: #393f4c;--useInfoTextColor: #000;--checkBoxBg: rgba(58, 58, 58, 0.39);--checkBoxCheckBg: #ccc;--checkGreen: #04ec1f;--abacusBlue: #0078ff;--dividerColor: #d7e0e0;--shortCutColor: #888f8e;--subMenuBorderColor: #ccc;--subMenuShadowColor: rgba(0, 0, 0, 0.63);--themeHighlightColor: rgba(218, 38, 255, 0.26);
  --chekkit-green: #74e79d;
  --chekkit-green-2: #67C960;
  --chekkit-blue: #52d9dd;
  --chekkit-gradient: linear-gradient(130deg, #74e79d 0%, #52d9dd 100%);
}

.disabled, a[class="disabled"]
{background-color: var(--disabledBg) !important;color: var(--disabledFg) !important;cursor: not-allowed !important;border-color: var(--disabledBorderColor) !important;min-width: initial !important;text-shadow: var(--disabledTextShadow) !important;pointer-events: none !important}

.disabledText, label.disabledText
{color: var(--disabledFg) !important;text-shadow: var(--disabledTextShadow) !important;}

$colors: var(--chekkit-green),
var(--chekkit-blue),
var(--chekkit-gradient);

$states: ("normal" : "",
        "hover" : "hov",
        "focus" : "fc",
        "active" : "ac");

$emmetss: (
        'chekkit-clr-green' : 'color',
        'chekkit-clr-blue' : 'color',
        'chekkit-clr-grad' : 'color'),
(
        'chekkit-bg-clr-green' : 'background-color',
        'chekkit-bg-clr-blue' : 'background-color',
        'chekkit-bg-clr-grad' : 'background-color'),
(
        'chekkit-bd-clr-green' : 'border-color',
        'chekkit-bd-clr-blue' : 'border-color',
        'chekkit-bd-clr-grad' : 'border-color');

//generate color emmet classes for all mouse states

@mixin create-color-set($emmet-state, $emmet, $color, $for, $rule-key)
{
  #{'.'}#{$emmet-state}#{$emmet}#{$for}
  {
    #{$rule-key} : #{$color} !important;
  }
}

//@each $color in $colors
//{
@each $state, $emmet-state in $states
{
  @if ($emmet-state == "")
  {
    @each $emmets in $emmetss
    {
      @each $emmet, $rule-key in $emmets
      {
        $idx: index(($emmets), ($emmet $rule-key));
        $color: nth($colors, $idx);
        $for: if($color == 'transparent', '-tr', '');
        @include create-color-set($emmet-state, $emmet, $color, $for, $rule-key);
      }
    }
  } @else
  {
    $gbgr : 'green', 'blue','grad';
    $colors: var(--chekkit-green),
    var(--chekkit-blue),
    var(--chekkit-gradient);

    @each $color in $colors
    {
      $clr-code : nth($gbgr, index($colors, $color));
      #{'.'}chekkit-#{$clr-code}-#{$emmet-state}-clr:#{$state}
      {
        color: #{$color} !important;
      }

      #{'.'}chekkit-#{$clr-code}-#{$emmet-state}-bg-clr:#{$state}
      {
        background-color: #{$color} !important;
      }

      #{'.'}chekkit-#{$clr-code}-#{$emmet-state}-bd-clr:#{$state}
      {
        border-color: #{$color} !important;
      }
    }
  }
}

//}
