///@author Kobina Koomson G.

/*region rows and cols*/
///spacing-pc-age
/// @group containers
$spacing-pc-age : "", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25;

///
$rc : "row", "col";
$nums : 2, 3, 4, 5, 6, 7, 8, 9, 10;

///Creates rows and columns rules and classes
/// @group containers
@mixin create-rows-and-cols()
{
  @each $dir in $rc
  {
    @each $num in $nums
    {
      .#{$dir}-#{$num}
      {
        width: 50%;
        display: inline-block;
        float: left;
      }

      @each $spacing in $spacing-pc-age
      {
        @if ($spacing == "")
        {
          @if ($dir == "col")
          {
            .#{$dir}-2
            {
              width   : 100%/$num;
              display : inline-block;
              float   : left;

              &:first-of-type
              {
                margin-right: 5px;
                &_pd {
                  margin-right: 0;
                  padding-right: 5px;}
              }
              &:last-of-type {margin-left: 5px;}
              &_pd {&:last-of-type {
                margin-left: 0;
                padding-left: 5px;}
              } //use padding if _pd is attaches to the class names
            }
          }
          @if ($dir == "row")
          {
            .#{$dir}-2
            {
              height  : 100%/$num;
              display : block;

              &:first-of-type
              {
                margin-top: 5px;
                &_pd {
                  margin-top: 0;
                  padding-top: 5px;}
              }
              &:last-of-type {margin-bottom: 5px;}
              &_pd {&:last-of-type{
                margin-bottom: 0;
                padding-bottom: 5px;}} //use padding if _pd is added to the class names

            }
          }
        } @else
        {
          @if ($dir == "col")
          {
            .#{$dir}-#{$num}-#{$spacing}
            {
              width        : (100%/$num) - $spacing;
              display      : inline-block;
              float        : left;
              margin-left  : #{$spacing/2}#{'%'};
              margin-right : #{$spacing/2}#{'%'};

              &_pd {
                margin-left  : 0;
                margin-right : 0;
                padding-left  : #{$spacing/2}#{'%'};
                padding-right : #{$spacing/2}#{'%'};
              }
            }
            .#{$dir}-#{$num}-#{$spacing}-#{'no-fl'}
            {
              width        : (100%/$num) - $spacing;
              margin-left  : #{$spacing/2}#{'%'};
              margin-right : #{$spacing/2}#{'%'};

              &_pd {
                margin-left  : 0;
                margin-right : 0;
                padding-left  : #{$spacing/2}#{'%'};
                padding-right : #{$spacing/2}#{'%'};
              }
            }

            .#{$dir}-#{$num}-#{$spacing}
            {
              &:first-of-type {margin-left : 0;}
              &_pd{&:first-of-type {padding-left : 0;}}
            }

            .#{$dir}-#{$num}-#{$spacing}:last-of-type
            {
              &:first-of-type {margin-right : 0;}
              &_pd{&:first-of-type {padding-right : 0;}}
            }
          }

          @if ($dir == "row")
          {
            .#{$dir}-#{$num}-#{$spacing}
            {
              height        : (100%/$num) - $spacing;
              display       : block;
              margin-top    : #{$spacing/2}#{'%'};
              margin-bottom : #{$spacing/2}#{'%'};

              &_pd {
                margin-top    : 0;
                margin-bottom : 0;
                padding-top  : #{$spacing/2}#{'%'};
                padding-bottom : #{$spacing/2}#{'%'};
              }
            }
            //.#{$dir}-#{$num}-#{$spacing}:first-of-type
            //{
            //  //margin-top : 0;
            //}
            //
            //.#{$dir}-#{$num}-#{$spacing}:last-of-type
            //{
            //  margin-bottom : 0;
            //}
          }
        }
      }
    }
  }
}

///
@include create-rows-and-cols();

///Flex box based container rules
///<br> .flex-container
///<br> .flex-cols
///<br> .flex-cols_{$spacing [in percentage]} e.g .flex-cols_4
///<br>
///<br> .flex-cols-{$number of elements}-{$spacing [in percentage]} e.g .flex-cols-4-2
///<br> .flex-rows-{$number of elements}-{$spacing [in percentage]} e.g .flex-rows-4-2
///<br> if the element has additional class name : "_iblk", display style of its children will be set to inline-block
///<br> if the element's children have additional class name : "_pd", spacing will be done using padding
///<br> Default spacing style uses margin
///<br> 
///<br> .flex-cols-{$number of elements}-{$spacing [in percentage]} e.g .flex-cols-4-2
///<br> .flex-rows-{$number of elements}-{$spacing [in percentage]} e.g .flex-rows-4-2
///<br> if the element's children have additional class name : "_pd", spacing will be done using padding
///<br> Default spacing style uses margin
/// @group containers
.flex
{
  &#{'-container'}
  {
    -webkit-box-pack        : start;
    -webkit-justify-content : flex-start;
    justify-content         : flex-start;
    display                 : flex;
    flex-wrap               : wrap;

    & > *
    {
      //display: flex;
    }
  }

  &#{'-cols'}
  {
    -webkit-box-pack        : start;
    -webkit-justify-content : flex-start;
    justify-content         : flex-start;
    display                 : flex;

    & > *
    {
      //display: flex;
    }
  }

  @each $spacing in $spacing-pc-age
  {
    @if ($spacing != "")
    {
      &#{'-cols'}_#{$spacing}
      {
        -webkit-box-pack        : start;
        -webkit-justify-content : flex-start;
        justify-content         : flex-start;
        //display                 : flex;

        &._iblk
        {
          & > *
          {
            display: inline-block;
          }
        }

        & > *
        {
          margin-left  : #{$spacing/2}#{'%'};
          margin-right : #{$spacing/2}#{'%'};

          &._pd{
            margin-left  : 0;
            margin-right : 0;

            padding-left  : #{$spacing/2}#{'%'};
            padding-right : #{$spacing/2}#{'%'};
          }

        }
      }
    }
  }

  @each $num in $nums
  {
    @each $spacing in $spacing-pc-age
    {
      @if ($spacing != "")
      {
        &#{'-container'}-#{$num}-#{$spacing}
        {
          -webkit-box-pack        : start;
          -webkit-justify-content : flex-start;
          justify-content         : flex-start;
          display                 : flex;
          flex-wrap               : wrap;

          & > *
          {
            width        : (100%/$num) - $spacing;
            margin-left  : #{$spacing/2}#{'%'};
            margin-right : #{$spacing/2}#{'%'};

            &._pd{
              margin-left  : 0;
              margin-right : 0;

              padding-left  : #{$spacing/2}#{'%'};
              padding-right : #{$spacing/2}#{'%'};
            }
          }

        }

        &#{'-cols'}-#{$num}-#{$spacing}
        {
          -webkit-box-pack        : start;
          -webkit-justify-content : flex-start;
          justify-content         : flex-start;
          display                 : flex;

          & > *
          {
            width        : (100%/$num) - $spacing;

            margin-left  : #{$spacing/2}#{'%'};
            margin-right : #{$spacing/2}#{'%'};

            &._pd{
              margin-left  : 0;
              margin-right : 0;

              padding-left  : #{$spacing/2}#{'%'};
              padding-right : #{$spacing/2}#{'%'};
            }
            /*&:first-of-type
            {
              margin-left : 0;
            }

            &:last-of-type
            {
              margin-right : 0;
            }*/
          }
        }

        &#{'-rows'}-#{$num}-#{$spacing}
        {
          -webkit-box-pack        : start;
          -webkit-justify-content : flex-start;
          justify-content         : flex-start;
          display                 : flex;
          flex-wrap               : wrap;

          & > *
          {
            height        : (100%/$num) - $spacing;
            width: 100%;
            margin-top  : #{$spacing/2}#{'%'};
            margin-bottom : #{$spacing/2}#{'%'};

            &._pd{
              margin-top  : 0;
              margin-bottom : 0;

              padding-top  : #{$spacing/2}#{'%'};
              padding-bottom : #{$spacing/2}#{'%'};
            }

          }
        }
      }
    }
  }

}
.col-2
{
  width: 50%;
  display: inline-block;
  float: left;
}
/// @group containers
.col-2:first-of-type
{
  //padding-right : 5px;
}

/// @group containers
.col-2:last-of-type
{
  //padding-left : 5px;
}

/// @group containers
.col-3
{
  width   : 33.33333333%;
  display : inline-block;
  float   : left;
}

/// @group containers
.col-4
{
  width   : 25%;
  display : inline-block;
  float   : left;
}

/// @group containers
.row-2
{
  height  : 50%;
  display : block;
}

/// @group containers
.row-3
{
  height  : 33.33333333%;
  display : block;
}

/// @group containers
.row-4
{
  height  : 25%;
  display : block;
}

.jc-{
  &sb{
    justify-content: space-between;
  }
  &sa{
    justify-content: space-around;
  }
  &se{
    justify-content: space-evenly;
  }
  &c{
    justify-content: center;
  }
  &l{
    justify-content: left;
  }
  &r{
    justify-content: right;
  }
  &fe{
    justify-content: flex-end;
  }
  &fs{
    justify-content: flex-start;
  }
  &bl{
    justify-content: baseline;
  }
}
////region aspect ratio, Heavily influenced by tuts on www.w3schools.com/howto
/// @group containers
.a1x1 .container /* 1:1 Aspect Ratio */
{
  //background-color : red;
  width            : 100%;
  padding-top      : 100%;
  position         : relative; /* If you want text inside of it */
}

/// @group containers
.a1x1 .text
{
  /* If you want text inside of the container */
  position : absolute;
  top      : 0;
  left     : 0;
  bottom   : 0;
  right    : 0;
}

/// @group containers
.a16x9
{
  padding-top : 56.25%; /* 16:9 Aspect Ratio */
}

/// @group containers
.a16x3
{
  padding-top : 75%; /* 4:3 Aspect Ratio */
}

/// @group containers
.a3x2
{
  padding-top : 66.66%; /* 3:2 Aspect Ratio */
}

/// @group containers
.a8x5
{
  padding-top : 62.5%; /* 8:5 Aspect Ratio */
}

/*endregion*/